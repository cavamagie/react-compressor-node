---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
    - name: "443"
      port: 443
      targetPort: 443
  selector:
    io.kompose.service: webserver
status:
  loadBalancer: {}
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: webserver
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webserver
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: webserver
    spec:
      containers:
        - image: nginx:alpine
          name: webserver
          ports:
            - containerPort: 80
            - containerPort: 443
          resources: {}
          tty: true
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/
              name: webserver-claim1
      restartPolicy: Always
      volumes:
        - name: webserver-claim1
          configMap:
            name: webserver-claim1

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: app
status:
  loadBalancer: {}
---  
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: app-network
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              io.kompose.network/app-network: "true"
  podSelector:
    matchLabels:
      io.kompose.network/app-network: "true"
---      
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: app
    spec:
      containers:
        - env:
            - name: SERVICE_NAME
              value: app
          image: cavamagie/react-compressor-node
          name: react-compressor-node
          ports:
            - containerPort: 8080
          resources: {}
          tty: true
      restartPolicy: Always
---
apiVersion: v1
data:
  app.conf: |

    server {
    listen 80;
    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/public;
    location / {
       proxy_pass http://app:3000;
    }
} 

kind: ConfigMap
metadata:
  name: webserver-claim1
